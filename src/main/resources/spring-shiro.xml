<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
    xmlns:aop="http://www.springframework.org/schema/aop"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">  
  
  
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"></bean>  
  
    <!-- 数据库保存的密码是使用MD5算法加密的，所以这里需要配置一个密码匹配对象。可自定义密码出错次数限制 -->  
    <bean id="credentialsMatcher" class="org.apache.shiro.authc.credential.Md5CredentialsMatcher"></bean>  
  
    <!-- 缓存管理，也可以使用ehcache或redis -->  
    <bean id="cacheManager" class="org.apache.shiro.cache.MemoryConstrainedCacheManager"></bean>  
  
    <!--   
      使用Shiro自带的JdbcRealm类  
      指定密码匹配所需要用到的加密对象  
      指定存储用户、角色、权限许可的数据源及相关查询语句  
     -->  
    <bean id="jdbcRealm" class="org.apache.shiro.realm.jdbc.JdbcRealm">  
        <property name="credentialsMatcher" ref="credentialsMatcher"></property>  
        <property name="permissionsLookupEnabled" value="true"></property>  
        <property name="dataSource" ref="dataSource"></property>  
        <property name="authenticationQuery"  
            value="SELECT password FROM sys_users WHERE username = ?"></property>  
        <property name="userRolesQuery"  
            value="SELECT r.role FROM sys_users_roles ur LEFT JOIN sys_roles r ON ur.role_id=r.id LEFT JOIN sys_users u ON ur.user_id = u.id WHERE username = ?"></property>  
        <property name="permissionsQuery"  
            value="SELECT p.permission FROM sys_roles_permissions rp LEFT JOIN sys_roles r ON rp.role_id=r.id LEFT JOIN sys_permissions p ON rp.permission_id=p.id  WHERE r.role= ?"></property>  
    </bean>  
  
    <!-- Shiro安全管理器 -->  
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">  
        <property name="realm" ref="jdbcRealm"></property>  
        <property name="cacheManager" ref="cacheManager"></property>  
    </bean>  
  
    <!--   
       Shiro主过滤器本身功能十分强大，其强大之处就在于它支持任何基于URL路径表达式的、自定义的过滤器的执行  
       Web应用中，Shiro可控制的Web请求必须经过Shiro主过滤器的拦截，Shiro对基于Spring的Web应用提供了完美的支持   
    -->  
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">  
        <!-- Shiro的核心安全接口，这个属性是必须的 -->  
        <property name="securityManager" ref="securityManager"></property>  
        <!-- 要求登录时的链接(登录页面地址)，非必须的属性，默认会自动寻找Web工程根目录下的"/login.jsp"页面 -->  
        <property name="loginUrl" value="/login"></property>  
        <!-- 登录成功后要跳转的连接(本例中此属性用不到，因为登录成功后的处理逻辑在LoginController里硬编码) -->  
        <!-- <property name="successUrl" value="/" ></property> -->  
        <!-- 用户访问未对其授权的资源时，所显示的连接 -->  
        <property name="unauthorizedUrl" value="/"></property>  
        <property name="filterChainDefinitions">  
            <value>
				/=anon
				/index*=anon
				/public/**=anon
				/login*=authc
				/logout*=anon
				/** = authc
			</value>
        </property>  
    </bean>  
  
</beans>  